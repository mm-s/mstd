#ifndef _MSTD_BIGINT
#define _MSTD_BIGINT
namespace mstd {
using namespace std;

template<int N>
class bigint: bitset<N> {
	typedef bitset<N> base;
public:
	template<typename T>
	bigint(T v): base(v) {
	}


};

template<int N>
bigint<N> operator+(const bigint<N>& a, const bigint<N>& b) {
		bigint<N> carry=a;
		a&=b;
		bigint<N> result=a;
		a^=b;
		while(carry.any()) {
		        bigint<N> shiftedcarry = carry << 1;
		        carry = result & shiftedcarry;
		        result ^= shiftedcarry;
		}
		return result;
    }		
		
}



}
#endif

