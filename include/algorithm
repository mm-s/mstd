#ifndef _MSTD_ALGORITHM
#define _MSTD_ALGORITHM
namespace mstd {

template<typename C, typename X>
void filter(C& c, const X& x) {
	typename C::iterator i=c.begin();
	typename C::iterator w=i;
	while(i!=c.end()) {
		while(i!=c.end() && x(*i)) {
			++i;
		}
		if (i!=c.end()) {
			if (w!=i) *w=move(*i);
			++w;
			i++;
		}
	}
	c.erase(w,c.end());	
}

}
#endif

